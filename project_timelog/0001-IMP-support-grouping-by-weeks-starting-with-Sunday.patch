From dd3337079ddf96b6ae9ab7545ed5f2af1422d834 Mon Sep 17 00:00:00 2001
From: GabbasovDinar <gabbasov@it-projects.info>
Date: Thu, 21 Jun 2018 14:22:54 +0500
Subject: [PATCH] [IMP] support grouping by weeks starting with Sunday

---
 odoo/models.py | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/odoo/models.py b/odoo/models.py
index d04e664..f85ba18 100644
--- a/odoo/models.py
+++ b/odoo/models.py
@@ -1794,6 +1794,7 @@ class BaseModel(object):
                 # Cfr: http://babel.pocoo.org/docs/dates/#date-fields
                 'day': 'dd MMM yyyy', # yyyy = normal year
                 'week': "'W'w YYYY",  # w YYYY = ISO week-year
+                'week_sunday': "'W'w'(s)' YYYY",  # w YYYY = ISO week-year
                 'month': 'MMMM yyyy',
                 'quarter': 'QQQ yyyy',
                 'year': 'yyyy',
@@ -1801,13 +1802,24 @@ class BaseModel(object):
             time_intervals = {
                 'day': dateutil.relativedelta.relativedelta(days=1),
                 'week': datetime.timedelta(days=7),
+                'week_sunday': datetime.timedelta(days=7),
                 'month': dateutil.relativedelta.relativedelta(months=1),
                 'quarter': dateutil.relativedelta.relativedelta(months=3),
                 'year': dateutil.relativedelta.relativedelta(years=1)
             }
             if tz_convert:
                 qualified_field = "timezone('%s', timezone('UTC',%s))" % (self._context.get('tz', 'UTC'), qualified_field)
-            qualified_field = "date_trunc('%s', %s)" % (gb_function or 'month', qualified_field)
+            if gb_function == 'week_sunday':
+                # postgres's date_trunc supports only weeks starting with Monday
+                # So, make this hack to support weeks starting with Sunday
+                if field_type == 'date':
+                    # interger must be used to don't convert DATE to TIMESTAMP
+                    interval_day = "integer '1'"
+                else:
+                    interval_day = "interval '1 day'"
+                qualified_field = "date_trunc('week', %s  + %s)" % (qualified_field, interval_day)
+            else:
+                qualified_field = "date_trunc('%s', %s)" % (gb_function or 'month', qualified_field)
         if field_type == 'boolean':
             qualified_field = "coalesce(%s,false)" % qualified_field
         return {
@@ -1861,6 +1873,10 @@ class BaseModel(object):
                 if ftype == 'many2one':
                     value = value[0]
                 elif ftype in ('date', 'datetime'):
+                    if ':week_sunday' in gb['groupby']:
+                        # postgres's date_trunc supports only weeks starting with Monday
+                        # So, make this hack to support weeks starting with Sunday
+                        value -= dateutil.relativedelta.relativedelta(days=1)
                     locale = self._context.get('lang') or 'en_US'
                     fmt = DEFAULT_SERVER_DATETIME_FORMAT if ftype == 'datetime' else DEFAULT_SERVER_DATE_FORMAT
                     tzinfo = None
--
1.9.1
